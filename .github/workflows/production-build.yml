name: Build Tauri App for Updater

on:
  push:
    branches:
      - main

jobs:
  build-tauri:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [macos-latest, windows-latest]

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Node.js (for frontend dependencies)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # Set up Rust (Tauri dependency)
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: |
          npm install -g pnpm
          pnpm install

      # Build the Tauri app
      - name: Build the app
        run: |
          # Build the app for the specific platform
          if [[ $RUNNER_OS == "Linux" ]]; then
            npm run tauri build -- --target x86_64-unknown-linux-gnu
          elif [[ $RUNNER_OS == "macOS" ]]; then
            npm run tauri build -- --target aarch64-apple-darwin
          elif [[ $RUNNER_OS == "Windows" ]]; then
            npm run tauri build -- --target x86_64-pc-windows-msvc
          fi

      # Archive macOS and Windows builds into .zip files
      - name: Archive macOS build
        if: matrix.platform == 'macos-latest'
        run: |
          zip -r app-macos.zip src-tauri/target/release/bundle/macos/*

      - name: Archive Windows build
        if: matrix.platform == 'windows-latest'
        run: |
          zip -r app-windows.zip src-tauri/target/release/bundle/windows/*

      # Upload the zip files as artifacts for later use
      - name: Upload macOS ZIP
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: app-macos.zip
          path: app-macos.zip

      - name: Upload Windows ZIP
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: app-windows.zip
          path: app-windows.zip
