name: 'publish'

on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm-based Macs (M1 and above).
            args: '--target aarch64-apple-darwin' 
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install pnpm
        run: npm install -g pnpm

      - name: install frontend dependencies
        run: pnpm install # Install dependencies using pnpm.

      # Set up Tauri signing only for macOS
      - name: Set up Tauri signing for macOS
        if: matrix.platform == 'macos-latest'
        run: echo "TAURI_SIGNING_PRIVATE_KEY=${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}" >> $GITHUB_ENV

      # Build the Tauri app
      - name: Build the app
        run: pnpm tauri build

      # Archive macOS and Windows builds into .zip files
      - name: Archive macOS build
        if: matrix.platform == 'macos-latest'
        run: |
          zip -r app-macos.zip src-tauri/target/release/bundle/macos/*
      - name: Archive Windows build
        if: matrix.platform == 'windows-latest'
        run: |
          zip -r app-windows.zip src-tauri/target/release/bundle/windows/*
      
      # Upload the zip files as artifacts for later use
      - name: Upload macOS ZIP
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: app-macos.zip
          path: app-macos.zip

      - name: Upload Windows ZIP
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: app-windows.zip
          path: app-windows.zip

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # The action automatically replaces __VERSION__ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
