name: Publish Tauri App

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ${{ matrix.platform }}

    strategy:
      matrix:
        platform: [macos-latest, windows-latest]

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      # Set up Rust (Tauri dependency)
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macOS runners, so it's in an `if` to slightly speed up Windows builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      
      - name: install pnpm
        run: npm install -g pnpm
        
      - name: check formatting
        run: pnpm format:check

      - name: run linter
        run: pnpm lint

      - name: build
        run: pnpm build

      # Generate the latest.json
      - name: Generate latest.json
        run: |
          echo '{
            "version": "1.0.1",
            "notes": "Bug fixes and performance improvements.",
            "pub_date": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "platforms": {
              "darwin-aarch64": {
                "url": "https://github.com/mikeraashoo/tauri-nextjs-template/releases/download/v1.0.1/app-macos.zip"
              },
              "windows-x86_64": {
                "url": "https://github.com/mikeraashoo/tauri-nextjs-template/releases/download/v1.0.1/app-windows.zip"
              }
            }
          }' > latest.json

      # Create a release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.1
          release_name: App v1.0.1
          body: Bug fixes and performance improvements.
          draft: false
          prerelease: false

      # Upload assets (e.g., app binaries and latest.json)
      - name: Upload macOS App Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: path/to/app-macos.zip
          asset_name: app-macos.zip
          asset_content_type: application/zip

      - name: Upload Windows App Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: path/to/app-windows.zip
          asset_name: app-windows.zip
          asset_content_type: application/zip

      - name: Upload latest.json
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: latest.json
          asset_name: latest.json
          asset_content_type: application/json
